{"ast":null,"code":"var _jsxFileName = \"/Users/diegoborigen/Personal/Projects/newinspir/src/components/common/myCustomForm/CustomInput.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CustomInput = ({\n  fieldName,\n  fieldType,\n  label,\n  handleChange,\n  value,\n  validations,\n  errors,\n  size\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: size === 'half' ? 'contact-item half' : 'contact-item',\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      className: 'contact-label',\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: fieldType,\n      name: fieldName,\n      id: fieldName,\n      className: errors && errors[fieldName] ? 'contact-input error' : 'contact-input',\n      onChange: event => handleChange(event, validations),\n      value: value,\n      placeholder: fieldName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: 'error-message',\n      children: errors ? errors[fieldName] : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n\n_c = CustomInput;\nCustomInput.propTypes = {\n  validations: PropTypes.array,\n  fieldName: PropTypes.string,\n  fieldType: PropTypes.string,\n  label: PropTypes.string,\n  value: PropTypes.string,\n  size: PropTypes.string,\n  handleChange: PropTypes.func,\n  errors: PropTypes.object\n};\nexport default CustomInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomInput\");","map":{"version":3,"sources":["/Users/diegoborigen/Personal/Projects/newinspir/src/components/common/myCustomForm/CustomInput.js"],"names":["React","PropTypes","CustomInput","fieldName","fieldType","label","handleChange","value","validations","errors","size","event","propTypes","array","string","func","object"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA,KAAxB;AAA+BC,EAAAA,YAA/B;AAA6CC,EAAAA,KAA7C;AAAoDC,EAAAA,WAApD;AAAiEC,EAAAA,MAAjE;AAAyEC,EAAAA;AAAzE,CAAD,KAAqF;AAErG,sBACI;AAAS,IAAA,SAAS,EAAEA,IAAI,KAAK,MAAT,GAAkB,mBAAlB,GAAyC,cAA7D;AAAA,4BACI;AAAO,MAAA,SAAS,EAAE,eAAlB;AAAA,gBAAoCL;AAApC;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,IAAI,EAAED,SADV;AAEI,MAAA,IAAI,EAAED,SAFV;AAGI,MAAA,EAAE,EAAEA,SAHR;AAII,MAAA,SAAS,EAAEM,MAAM,IAAIA,MAAM,CAACN,SAAD,CAAhB,GAA8B,qBAA9B,GAAsD,eAJrE;AAKI,MAAA,QAAQ,EAAGQ,KAAD,IAAWL,YAAY,CAACK,KAAD,EAAQH,WAAR,CALrC;AAMI,MAAA,KAAK,EAAED,KANX;AAOI,MAAA,WAAW,EAAEJ;AAPjB;AAAA;AAAA;AAAA;AAAA,YAFJ,eAWI;AAAM,MAAA,SAAS,EAAE,eAAjB;AAAA,gBAAmCM,MAAM,GAAGA,MAAM,CAACN,SAAD,CAAT,GAAuB;AAAhE;AAAA;AAAA;AAAA;AAAA,YAXJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CAjBD;;KAAMD,W;AAmBNA,WAAW,CAACU,SAAZ,GAAwB;AACpBJ,EAAAA,WAAW,EAAEP,SAAS,CAACY,KADH;AAEpBV,EAAAA,SAAS,EAAEF,SAAS,CAACa,MAFD;AAGpBV,EAAAA,SAAS,EAAEH,SAAS,CAACa,MAHD;AAIpBT,EAAAA,KAAK,EAAEJ,SAAS,CAACa,MAJG;AAKpBP,EAAAA,KAAK,EAAEN,SAAS,CAACa,MALG;AAMpBJ,EAAAA,IAAI,EAAET,SAAS,CAACa,MANI;AAOpBR,EAAAA,YAAY,EAAEL,SAAS,CAACc,IAPJ;AAQpBN,EAAAA,MAAM,EAAER,SAAS,CAACe;AARE,CAAxB;AAWA,eAAed,WAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst CustomInput = ({ fieldName, fieldType, label, handleChange, value, validations, errors, size }) => {\n\n    return (\n        <section className={size === 'half' ? 'contact-item half'  : 'contact-item'}>\n            <label className={'contact-label'}>{label}</label>\n            <input\n                type={fieldType}\n                name={fieldName}\n                id={fieldName}\n                className={errors && errors[fieldName] ? 'contact-input error' : 'contact-input'}\n                onChange={(event) => handleChange(event, validations)}\n                value={value}\n                placeholder={fieldName}\n            />\n            <span className={'error-message'}>{errors ? errors[fieldName] : null}</span>\n        </section>\n    )\n};\n\nCustomInput.propTypes = {\n    validations: PropTypes.array,\n    fieldName: PropTypes.string,\n    fieldType: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.string,\n    size: PropTypes.string,\n    handleChange: PropTypes.func,\n    errors: PropTypes.object,\n};\n\nexport default CustomInput"]},"metadata":{},"sourceType":"module"}